<?xml version="1.0"?>
<!--
/**
 * @category    Gateway Payment
 * @package     Ifthenpay_Payment
 * @author      Ifthenpay
 * @copyright   Ifthenpay (https://www.ifthenpay.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
-->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <type name="Ifthenpay\Payment\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="Ifthenpay\Payment\Logger\Logger">
        <arguments>
            <argument name="name" xsi:type="string">ifThenPayLogger</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Ifthenpay\Payment\Logger\Handler</item>
            </argument>
        </arguments>
    </type>

    <!-- MULTIBANCO start-->

    <!-- Payment Method Facade configuration -->
    <virtualType name="IfthenpayMultibancoFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Ifthenpay\Payment\Model\Ui\MultibancoConfigProvider::CODE</argument>
            <argument name="config" xsi:type="object">IfthenpayMultibancoConfig</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Ifthenpay\Payment\Block\IfthenpayInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IfthenpayMultibancoValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IfthenpayMultibancoValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IfthenpayMultibancoGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="IfthenpayMultibancoConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Ifthenpay\Payment\Model\Ui\MultibancoConfigProvider::CODE</argument>
        </arguments>
    </virtualType>


    <!-- Validators -->
    <virtualType name="IfthenpayMultibancoValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IfthenpayMultibancoCountryValidator</item>
                <item name="currency" xsi:type="string">Ifthenpay\Payment\Gateway\Validator\CurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayMultibancoCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayMultibancoConfig</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="IfthenpayMultibancoValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IfthenpayMultibancoConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayMultibancoConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IfthenpayMultibancoConfig</argument>
        </arguments>
    </virtualType>


    <!-- inject config to gateway config -->
    <type name="Ifthenpay\Payment\Gateway\Config\MultibancoConfig">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayMultibancoConfig</argument>
        </arguments>
    </type>

    <!-- Commands infrastructure -->
    <virtualType name="IfthenpayMultibancoGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">IfthenpayMultibancoAuthorizeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize command -->
    <virtualType name="IfthenpayMultibancoAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayMultibancoAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\MultibancoTxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\MultibancoAuthorizationClient</argument>
        </arguments>
    </virtualType>

    <!-- Authorization Request -->
    <virtualType name="IfthenpayMultibancoAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\MultibancoAuthorizationRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\MultibancoAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayMultibancoConfig</argument>
        </arguments>
    </type>

    <!-- MULTIBANCO end -->




    <!-- PAYSHOP start-->

    <!-- Payment Method Facade configuration -->
    <virtualType name="IfthenpayPayshopFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Ifthenpay\Payment\Model\Ui\PayshopConfigProvider::CODE</argument>
            <argument name="config" xsi:type="object">IfthenpayPayshopConfig</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Ifthenpay\Payment\Block\IfthenpayInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IfthenpayPayshopValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IfthenpayPayshopValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IfthenpayPayshopGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="IfthenpayPayshopConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Ifthenpay\Payment\Model\Ui\PayshopConfigProvider::CODE</argument>
        </arguments>
    </virtualType>


    <!-- Validators -->
    <virtualType name="IfthenpayPayshopValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IfthenpayPayshopCountryValidator</item>
                <item name="currency" xsi:type="string">Ifthenpay\Payment\Gateway\Validator\CurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayPayshopCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayPayshopConfig</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="IfthenpayPayshopValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IfthenpayPayshopConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayPayshopConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IfthenpayPayshopConfig</argument>
        </arguments>
    </virtualType>


    <!-- inject config to gateway config -->
    <type name="Ifthenpay\Payment\Gateway\Config\PayshopConfig">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayPayshopConfig</argument>
        </arguments>
    </type>


    <!-- Commands infrastructure -->
    <virtualType name="IfthenpayPayshopGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">IfthenpayPayshopAuthorizeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize command -->
    <virtualType name="IfthenpayPayshopAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayPayshopAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\PayshopTxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\PayshopAuthorizationClient</argument>
        </arguments>
    </virtualType>

    <!-- Authorization Request -->
    <virtualType name="IfthenpayPayshopAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\PayshopAuthorizationRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\PayshopAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayPayshopConfig</argument>
        </arguments>
    </type>


    <!-- PAYSHOP end -->


    <!-- MBWAY start-->

    <!-- Payment Method Facade configuration -->
    <virtualType name="IfthenpayMbwayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Ifthenpay\Payment\Model\Ui\MbwayConfigProvider::CODE</argument>
            <argument name="config" xsi:type="object">IfthenpayMbwayConfig</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Ifthenpay\Payment\Block\IfthenpayInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IfthenpayMbwayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IfthenpayMbwayValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IfthenpayMbwayGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="IfthenpayMbwayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Ifthenpay\Payment\Model\Ui\MbwayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>


    <!-- Validators -->
    <virtualType name="IfthenpayMbwayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IfthenpayMbwayCountryValidator</item>
                <item name="currency" xsi:type="string">Ifthenpay\Payment\Gateway\Validator\CurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayMbwayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayMbwayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="IfthenpayMbwayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IfthenpayMbwayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayMbwayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IfthenpayMbwayConfig</argument>
        </arguments>
    </virtualType>


    <!-- inject config to gateway config -->
    <type name="Ifthenpay\Payment\Gateway\Config\MbwayConfig">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayMbwayConfig</argument>
        </arguments>
    </type>



    <!-- Commands infrastructure -->
    <virtualType name="IfthenpayMbwayGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">IfthenpayMbwayAuthorizeCommand</item>
                <item name="refund" xsi:type="string">IfthenpayRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize command -->
    <virtualType name="IfthenpayMbwayAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayMbwayAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\MbwayTxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\MbwayAuthorizationClient</argument>
        </arguments>
    </virtualType>



    <!-- Authorization Request -->
    <virtualType name="IfthenpayMbwayAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\MbwayAuthorizationRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\MbwayAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayMbwayConfig</argument>
        </arguments>
    </type>








    <!-- MBWAY end -->

    <!-- Ccard start -->

    <!-- Payment Method Facade configuration -->
    <virtualType name="IfthenpayCcardFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Ifthenpay\Payment\Model\Ui\CcardConfigProvider::CODE</argument>
            <argument name="config" xsi:type="object">IfthenpayCcardConfig</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Ifthenpay\Payment\Block\IfthenpayInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IfthenpayCcardValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IfthenpayCcardValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IfthenpayCcardGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="IfthenpayCcardConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Ifthenpay\Payment\Model\Ui\CcardConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="IfthenpayCcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IfthenpayCcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayCcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IfthenpayCcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- Validators -->
    <virtualType name="IfthenpayCcardValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IfthenpayCcardCountryValidator</item>
                <item name="currency" xsi:type="string">Ifthenpay\Payment\Gateway\Validator\CurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayCcardCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayCcardConfig</argument>
        </arguments>
    </virtualType>

    <!-- inject config to gateway config -->
    <type name="Ifthenpay\Payment\Gateway\Config\CcardConfig">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayCcardConfig</argument>
        </arguments>
    </type>



    <!-- Commands infrastructure -->
    <virtualType name="IfthenpayCcardGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">IfthenpayCcardAuthorizeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Authorize command -->
    <virtualType name="IfthenpayCcardAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayCcardAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\CcardTxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\CcardAuthorizationClient</argument>
        </arguments>
    </virtualType>



    <!-- Authorization Request -->
    <virtualType name="IfthenpayCcardAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\CcardAuthorizationRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\CcardAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayCcardConfig</argument>
        </arguments>
    </type>


    <!-- Ccard end -->


    <!-- Cofidis start -->

    <!-- Payment Method Facade configuration -->
    <virtualType name="IfthenpayCofidisFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Ifthenpay\Payment\Model\Ui\CofidisConfigProvider::CODE</argument>
            <argument name="config" xsi:type="object">IfthenpayCofidisConfig</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Ifthenpay\Payment\Block\IfthenpayInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IfthenpayCofidisValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IfthenpayCofidisValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IfthenpayCofidisGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="IfthenpayCofidisConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Ifthenpay\Payment\Model\Ui\CofidisConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="IfthenpayCofidisValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IfthenpayCofidisConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayCofidisConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IfthenpayCofidisConfig</argument>
        </arguments>
    </virtualType>

    <!-- Validators -->
    <virtualType name="IfthenpayCofidisValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IfthenpayCofidisCountryValidator</item>
                <item name="currency" xsi:type="string">Ifthenpay\Payment\Gateway\Validator\CurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayCofidisCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayCofidisConfig</argument>
        </arguments>
    </virtualType>

    <!-- inject config to gateway config -->
    <type name="Ifthenpay\Payment\Gateway\Config\CofidisConfig">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayCofidisConfig</argument>
        </arguments>
    </type>



    <!-- Commands infrastructure -->
    <virtualType name="IfthenpayCofidisGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">IfthenpayCofidisAuthorizeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Authorize command -->
    <virtualType name="IfthenpayCofidisAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayCofidisAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\CofidisTxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\CofidisAuthorizationClient</argument>
        </arguments>
    </virtualType>



    <!-- Authorization Request -->
    <virtualType name="IfthenpayCofidisAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\CofidisAuthorizationRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\CofidisAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayCofidisConfig</argument>
        </arguments>
    </type>


    <!-- Cofidis end -->



    <!-- Ifthenpaygateway start -->

    <!-- Payment Method Facade configuration -->
    <virtualType name="IfthenpayIfthenpaygatewayFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Ifthenpay\Payment\Model\Ui\IfthenpaygatewayConfigProvider::CODE</argument>
            <argument name="config" xsi:type="object">IfthenpayIfthenpaygatewayConfig</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Ifthenpay\Payment\Block\IfthenpayInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IfthenpayIfthenpaygatewayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IfthenpayIfthenpaygatewayValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IfthenpayIfthenpaygatewayGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Configuration reader -->
    <virtualType name="IfthenpayIfthenpaygatewayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Ifthenpay\Payment\Model\Ui\IfthenpaygatewayConfigProvider::CODE</argument>
        </arguments>
    </virtualType>

    <!-- Value handlers infrastructure -->
    <virtualType name="IfthenpayIfthenpaygatewayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IfthenpayIfthenpaygatewayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayIfthenpaygatewayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">IfthenpayIfthenpaygatewayConfig</argument>
        </arguments>
    </virtualType>

    <!-- Validators -->
    <virtualType name="IfthenpayIfthenpaygatewayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">IfthenpayIfthenpaygatewayCountryValidator</item>
                <item name="currency" xsi:type="string">Ifthenpay\Payment\Gateway\Validator\CurrencyValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="IfthenpayIfthenpaygatewayCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayIfthenpaygatewayConfig</argument>
        </arguments>
    </virtualType>

    <!-- inject config to gateway config -->
    <type name="Ifthenpay\Payment\Gateway\Config\IfthenpaygatewayConfig">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayIfthenpaygatewayConfig</argument>
        </arguments>
    </type>



    <!-- Commands infrastructure -->
    <virtualType name="IfthenpayIfthenpaygatewayGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">IfthenpayIfthenpaygatewayAuthorizeCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Initialize command -->
    <virtualType name="IfthenpayIfthenpaygatewayAuthorizeCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayIfthenpaygatewayAuthorizationRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\IfthenpaygatewayTxnIdHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\IfthenpaygatewayAuthorizationClient</argument>
        </arguments>
    </virtualType>



    <!-- Authorization Request -->
    <virtualType name="IfthenpayIfthenpaygatewayAuthorizationRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\IfthenpaygatewayAuthorizationRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\IfthenpaygatewayAuthorizationRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayIfthenpaygatewayConfig</argument>
        </arguments>
    </type>


    <!-- Ifthenpaygateway end -->



    <!-- Refund command used by mbway and ccard -->
    <virtualType name="IfthenpayRefundCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IfthenpayRefundRequest</argument>
            <argument name="handler" xsi:type="object">Ifthenpay\Payment\Gateway\Response\RefundHandler</argument>
            <argument name="transferFactory" xsi:type="object">Ifthenpay\Payment\Gateway\Http\TransferFactory</argument>
            <argument name="client" xsi:type="object">Ifthenpay\Payment\Gateway\Http\Client\RefundClient</argument>
        </arguments>
    </virtualType>


    <!-- refund Request -->
    <virtualType name="IfthenpayRefundRequest" type="Magento\Payment\Gateway\Request\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="transaction" xsi:type="string">Ifthenpay\Payment\Gateway\Request\RefundRequest</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Ifthenpay\Payment\Gateway\Request\RefundRequest">
        <arguments>
            <argument name="config" xsi:type="object">IfthenpayConfig</argument>
        </arguments>
    </type>
    <virtualType name="IfthenpayConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="string">ifthenpay</argument>
        </arguments>
    </virtualType>


</config>
